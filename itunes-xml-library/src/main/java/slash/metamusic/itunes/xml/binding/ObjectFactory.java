//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.0-b52-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2006.12.16 at 11:08:45 PM CET
//


package slash.metamusic.itunes.xml.binding;

import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlElementDecl;
import javax.xml.bind.annotation.XmlRegistry;
import javax.xml.datatype.XMLGregorianCalendar;
import javax.xml.namespace.QName;
import java.math.BigDecimal;
import java.math.BigInteger;


/**
 * This object contains factory methods for each
 * Java content interface and Java element interface
 * generated in the org.w3.namespace package.
 * <p>An ObjectFactory allows you to programatically
 * construct new instances of the Java representation
 * for XML content. The Java representation of XML
 * content can consist of schema derived interfaces
 * and classes representing the binding of schema
 * type definitions, element declarations and model
 * groups.  Factory methods for each of these are
 * provided in this class.
 */
@XmlRegistry
public class ObjectFactory {
    private final static String uri = ""; // http://www.apple.com/DTDs/PropertyList-1.0.dtd";

    private final static QName _Real_QNAME = new QName(uri, "real");
    private final static QName _Integer_QNAME = new QName(uri, "integer");
    private final static QName _Key_QNAME = new QName(uri, "key");
    private final static QName _True_QNAME = new QName(uri, "true");
    private final static QName _Date_QNAME = new QName(uri, "date");
    private final static QName _String_QNAME = new QName(uri, "string");
    private final static QName _False_QNAME = new QName(uri, "false");
    private final static QName _Data_QNAME = new QName(uri, "data");

    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package {@link uri}
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link Plist }
     */
    public Plist createPlist() {
        return new Plist();
    }

    /**
     * Create an instance of {@link Dict }
     */
    public Dict createDict() {
        return new Dict();
    }

    /**
     * Create an instance of {@link Array }
     */
    public Array createArray() {
        return new Array();
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link BigDecimal }{@code >}}
     */
    @XmlElementDecl(name = "real")
    public JAXBElement<BigDecimal> createReal(BigDecimal value) {
        return new JAXBElement<BigDecimal>(_Real_QNAME, BigDecimal.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link BigInteger }{@code >}}
     */
    @XmlElementDecl(name = "integer")
    public JAXBElement<BigInteger> createInteger(BigInteger value) {
        return new JAXBElement<BigInteger>(_Integer_QNAME, BigInteger.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     */
    @XmlElementDecl(name = "key")
    public JAXBElement<String> createKey(String value) {
        return new JAXBElement<String>(_Key_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Object }{@code >}}
     */
    @XmlElementDecl(name = "true")
    public JAXBElement<Object> createTrue(Object value) {
        return new JAXBElement<Object>(_True_QNAME, Object.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link XMLGregorianCalendar }{@code >}}
     */
    @XmlElementDecl(name = "date")
    public JAXBElement<XMLGregorianCalendar> createDate(XMLGregorianCalendar value) {
        return new JAXBElement<XMLGregorianCalendar>(_Date_QNAME, XMLGregorianCalendar.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     */
    @XmlElementDecl(name = "string")
    public JAXBElement<String> createString(String value) {
        return new JAXBElement<String>(_String_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Object }{@code >}}
     */
    @XmlElementDecl(name = "false")
    public JAXBElement<Object> createFalse(Object value) {
        return new JAXBElement<Object>(_False_QNAME, Object.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link byte[]}{@code >}}
     */
    @XmlElementDecl(name = "data")
    public JAXBElement<byte[]> createData(byte[] value) {
        return new JAXBElement<byte[]>(_Data_QNAME, byte[].class, null, ((byte[]) value));
    }

}
