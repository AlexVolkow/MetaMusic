# Create two appenders, one called stdout and the other called rolling
log4j.rootLogger=TRACE, stdout, rolling

# Configure the stdout appender to go to the Console
log4j.appender.stdout=org.apache.log4j.ConsoleAppender

#  Configure the stdout appender to use the PatternLayout
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout

# Pattern to output the caller's file name and line number.
log4j.appender.stdout.layout.ConversionPattern=%5p [%t] (%F:%L) - %m%n

# Configure the rolling appender to be a RollingFileAppender
log4j.appender.rolling=org.apache.log4j.RollingFileAppender

# Configure the name of the logout for the rolling appender
log4j.appender.rolling.File=var/logs/metamusic.log

# Set up the maximum size of the rolling log file
log4j.appender.rolling.MaxFileSize=10000KB

# Keep ten backup files of the rolling appender
log4j.appender.rolling.MaxBackupIndex=10

# Configure the Layout pattern and conversion pattern for the rolling appender
log4j.appender.rolling.layout=org.apache.log4j.PatternLayout
log4j.appender.rolling.layout.ConversionPattern=%d - %p (%F:%L) - %m%n


# Print only messages of level INFO or above in the core implementation package
#log4j.logger.slash.metamusic.core.impl=INFO

# Make well-tested components less verbose
log4j.logger.slash.metamusic.exporter=INFO
log4j.logger.slash.metamusic.importer.issue.merge.Dependencies=INFO
log4j.logger.slash.metamusic.importer.util.TimeoutRunner=INFO
log4j.logger.slash.metamusic.reflection=INFO

# Make third-party components less verbose
log4j.logger.org.hibernate=INFO

# Lock out trace messages for now
log4j.logger.slash.metamusic.importer.issue.merge.Merger=INFO
